name: Build Linux Binary

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
      
    - name: Build binary with PyInstaller
      run: |
        pyinstaller mqtt-chat.spec
          
    - name: Test binary
      run: |
        ./dist/mqtt-chat --help || echo "Binary created successfully"
        file dist/mqtt-chat
        
    - name: Upload binary as artifact
      uses: actions/upload-artifact@v3
      with:
        name: mqtt-chat-linux-x64
        path: dist/mqtt-chat
        retention-days: 30
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/mqtt-chat
        name: "MQTT Chat ${{ github.ref_name }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
